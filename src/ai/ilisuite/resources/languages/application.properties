general.version             = 1.3.1-20191219

buttons.add     = Add
buttons.back    = < Back
buttons.browse  = Browse
buttons.cancel  = Cancel
buttons.execute = Execute
buttons.exit    = Exit
buttons.finish  = Finish
buttons.next    = Next >
buttons.ok      = OK

dialog.about.otherProjects                 = This product includes software developed by other projects:
dialog.editItem.selectFolder               = Select a folder...
dialog.editItem.titleAdd                   = Add item
dialog.editItem.titleModify                = Modify item
dialog.editItem.typeUrl                    = Type an url or directory
dialog.help.back                           = Back
dialog.help.home                           = Home
dialog.help.title                          = Help
dialog.inputModels.title                   = Models
dialog.modeldir.add                        = Add
dialog.modeldir.confirmDeleteDialogMessage = Are you sure you want to delete this item?
dialog.modeldir.confirmDeleteDialogTitle   = Delete item
dialog.modeldir.delete                     = Delete
dialog.modeldir.dialogNoItemSelected       = No item selected
dialog.modeldir.modify                     = Modify
dialog.modeldir.title                      = Model repositories
dialog.modeldirdefault.title               = Default model repositories
dialog.preferences.logDirLable             = Log Directory
dialog.preferences.title                   = Select a folder...
dialog.proxy.proxyHost                     = Proxy server (http)
dialog.proxy.proxyPort                     = Proxy port
dialog.proxy.title                         = Proxy settings

export.exportScope = Export scope (define what records are exported)

general.appName             = iliSuite
general.available           = Available
general.baskets             = Baskets
general.chooseMainOption    = Choose Option
general.dataset             = Dataset
general.disableRounding     = disableRounding
general.file.choose         = Choose file
general.file.extension.all  = All Files
general.file.extension.ili  = Interlis file
general.file.extension.itf  = INTERLIS 1 transfer file (*.itf)
general.file.extension.sql  = SQL Script
general.file.extension.toml = TOML file (*.toml)
general.file.extension.xtf  = INTERLIS 2 transfer file (*.xtf)
general.file.saveAs         = Save as
general.finishMessage       = Click execute to start the process or click back if you want ro review or change any settings
general.geopackage          = GeoPackage
general.iliFile             = Interlis file (.ili)
general.language.codEnglish = en
general.language.codGerman  = de
general.language.codSpanish = es
general.language.english    = English
general.language.german     = German
general.language.label      = Language
general.language.spanish    = Spanish
general.mdb                 = MDB
general.modelDir            = Models repository
general.models              = Models
general.options             = Options
general.oracle              = Oracle
general.postgresql          = Postgresql
general.required            = Required
general.selected            = Selected
general.sqlserver           = MS SQL Server
general.topics              = Topics
general.umlEditorName       = UML/INTERLIS Editor 
general.umlEditorVersion    = 3.6.6-20190621
general.versionText         = Version
general.xtfFile             = Data file (.XTF)

generatePhysicalModel.constrainsCreation                      = Constrains creation
generatePhysicalModel.constrainsCreation.createFk             = createFk
generatePhysicalModel.constrainsCreation.createNumChecks      = createNumChecks
generatePhysicalModel.constrainsCreation.createUnique         = createUnique
generatePhysicalModel.constrainsCreation.sqlEnableNull        = sqlEnableNull
generatePhysicalModel.ddl                                     = DDL
generatePhysicalModel.ddlNames                                = Table/Column names
generatePhysicalModel.ddlNames.disableNameOptimization        = disableNameOptimization
generatePhysicalModel.ddlNames.maxNameLength                  = MaxNameLength
generatePhysicalModel.ddlNames.nameByTopic                    = nameByTopic
generatePhysicalModel.enumeration                             = Enumeration
generatePhysicalModel.enumeration.beautifyEnumDispName        = beautifyEnumDispName
generatePhysicalModel.enumeration.createEnumTabs              = createEnumTabs
generatePhysicalModel.enumeration.createEnumTabsWithId        = createEnumTabsWithId
generatePhysicalModel.enumeration.createEnumTxtCol            = createEnumTxtCol
generatePhysicalModel.enumeration.createSingleEnumTab         = createSingleEnumTab
generatePhysicalModel.geometry                                = Geometry
generatePhysicalModel.geometry.defaultSrsAuth                 = defaultSrsAuth
generatePhysicalModel.geometry.defaultSrsCode                 = defaultSrsCode
generatePhysicalModel.geometry.oneGeomPerTable                = oneGeomPerTable
generatePhysicalModel.geometry.strokeArcs                     = strokeArcs
generatePhysicalModel.iliFile                                 = ili File (.ili)
generatePhysicalModel.indexCreation                           = Index creation
generatePhysicalModel.indexCreation.createFkIdx               = createFkIdx
generatePhysicalModel.indexCreation.createGeomIdx             = createGeomIdx
generatePhysicalModel.inheritance                             = Inheritance
generatePhysicalModel.inheritance.noSmart                     = noSmartMapping
generatePhysicalModel.inheritance.smart1                      = smart1Inheritance
generatePhysicalModel.inheritance.smart2                      = smart2Inheritance
generatePhysicalModel.mappings                                = Mappings
generatePhysicalModel.meta_miscellaneous                      = Metainformation/Miscellaneous
generatePhysicalModel.metainformation                         = Additional metainformation
generatePhysicalModel.metainformation.createBasketCol         = createBasketCol
generatePhysicalModel.metainformation.createDatasetCol        = createDatasetCol
generatePhysicalModel.metainformation.createMetaInfo          = createMetaInfo
generatePhysicalModel.metainformation.createStdCols           = createStdCols
generatePhysicalModel.metainformation.createTypeDiscriminator = createTypeDiscriminator
generatePhysicalModel.metainformation.iliMetaAttrs            = iliMetaAttrs
generatePhysicalModel.metainformation.importTid               = importTid
generatePhysicalModel.metainformation.t_id_name               = t_id_name
generatePhysicalModel.miscellaneous                           = Miscellaneous
generatePhysicalModel.miscellaneous.createscript              = createscript
generatePhysicalModel.miscellaneous.dropscript                = dropscript
generatePhysicalModel.miscellaneous.idSeqMax                  = idSeqMax
generatePhysicalModel.miscellaneous.idSeqMin                  = idSeqMin
generatePhysicalModel.miscellaneous.ver4-translation          = ver4-translation
generatePhysicalModel.structures                              = Structures
generatePhysicalModel.structures.coalesceArray                = coalesceArray
generatePhysicalModel.structures.coalesceCatalogueRef         = coalesceCatalogueRef
generatePhysicalModel.structures.coalesceMultiLine            = coalesceMultiLine
generatePhysicalModel.structures.coalesceMultiPoint           = coalesceMultiPoint
generatePhysicalModel.structures.coalesceMultisurface         = coalesceMultisurface
generatePhysicalModel.structures.expandMultiLingual           = expandMultiLingual

help.tooltip.exportData.exportScope.baskets                                = export data of baskets with given BIDs (requires --createBasketCol in schemaimport)
help.tooltip.exportData.exportScope.dataset                                = export data of baskets in given dataset (requires --createBasketCol in schemaimport)
help.tooltip.exportData.exportScope.models                                 = export all data of given models
help.tooltip.exportData.exportScope.topics                                 = export baskets of given topics (requires --createBasketCol in schemaimport)
help.tooltip.general.disableRounding                                       = Disable rounding of import/export data.
help.tooltip.general.logging.logEnabled                                    = write log messages to the given directory
help.tooltip.general.logging.traceEnabled                                  = write more detailed log messages (helpful for program error analysis)
help.tooltip.general.modeldir                                              = Path(s) of directories containing ili-files.
help.tooltip.generatePhysicalModel.constrainsCreation.createFk             = create a foreign key constraint on colums that reference other tables
help.tooltip.generatePhysicalModel.constrainsCreation.createNumChecks      = create SQL-CHECK-constraints to validate the numeric range
help.tooltip.generatePhysicalModel.constrainsCreation.createUnique         = maps INTERLIS-UNIQUE-constraints to SQL-UNIQUEconstraints (if mappable)
help.tooltip.generatePhysicalModel.constrainsCreation.sqlEnableNull        = all columns of Interlis attributes are nullable (independent of MANDATORY)
help.tooltip.generatePhysicalModel.ddlNames.disableNameOptimization        = Use ModelTopicClass as name pattern for tables
help.tooltip.generatePhysicalModel.ddlNames.maxNameLength                  = limits the length of names to the given value (Default: 60)
help.tooltip.generatePhysicalModel.ddlNames.nameByTopic                    = Use TopicClass as name pattern for tables
help.tooltip.generatePhysicalModel.enumeration.beautifyEnumDispName        = replace '_' with ' ' in values of column dispName
help.tooltip.generatePhysicalModel.enumeration.createEnumTabs              = create an additional table per enumeration type
help.tooltip.generatePhysicalModel.enumeration.createEnumTabsWithId        = generate tables with T_Id for enum definitions and use ids to reference entries in generated enum tables.
help.tooltip.generatePhysicalModel.enumeration.createEnumTxtCol            = create an additional redundant column (same value as dispName in enum tables)
help.tooltip.generatePhysicalModel.enumeration.createSingleEnumTab         = create one single additional table for all enumeration types
help.tooltip.generatePhysicalModel.geometry.defaultSrsAuth                 = SRS authority, if not evaluable from the Interlis model. Default: EPSG
help.tooltip.generatePhysicalModel.geometry.defaultSrsCode                 = SRS code, if not evaluable from the Interlis model. Default: 21781
help.tooltip.generatePhysicalModel.geometry.oneGeomPerTable                = create helper tables, if the Interlis class has more than one geometry attribute, so that the SQL tables have not more than one geometry column
help.tooltip.generatePhysicalModel.geometry.strokeArcs                     = stroke arcs on --import
help.tooltip.generatePhysicalModel.indexCreation.createFkIdx               = create an index on every foreign key column (can also be used without --createFk)
help.tooltip.generatePhysicalModel.indexCreation.createGeomIdx             = create a spatial index on every geometry column
help.tooltip.generatePhysicalModel.inheritance.noSmart                     = disables all smart mappings (disables also inheritance smart mapping)
help.tooltip.generatePhysicalModel.inheritance.smart1                      = mix of SuperClass, SubClass, NewClass
help.tooltip.generatePhysicalModel.inheritance.smart2                      = mix of SubClass, NewAndSubClass
help.tooltip.generatePhysicalModel.metainformation.createBasketCol         = creates in every table an additional column T_basket (that is a FK to t_ili2db_basket) to identify the basket of this record
help.tooltip.generatePhysicalModel.metainformation.createDatasetCol        = creates in every table an additional column T_datasetname to identify the dataset of this basket. Requires also the option --dataset.
help.tooltip.generatePhysicalModel.metainformation.createMetaInfo          = Create meta-tables T_ILI2DB_TABLE_PROP and T_ILI2DB_COLUMN_PROP with additional information about Interlis model
help.tooltip.generatePhysicalModel.metainformation.createStdCols           = creates in every table additional meta data columns T_User, T_CreateDate, T_LastChange
help.tooltip.generatePhysicalModel.metainformation.createTypeDiscriminator = creates in every table a type discirminator colum t_type (otherwise only tables with inheritance get such a column)
help.tooltip.generatePhysicalModel.metainformation.iliMetaAttrs            = iliMetaAttrs
help.tooltip.generatePhysicalModel.metainformation.importTid               = reads the TID from the transfer file into an additional column T_Ili_Tid (otherwise only classes with a stable OID gets this column)
help.tooltip.generatePhysicalModel.metainformation.t_id_name               = defines the name of the internal/technical id. Default : T_Id
help.tooltip.generatePhysicalModel.miscellaneous.createscript              = record the sql statements during --schemaimport to the given file
help.tooltip.generatePhysicalModel.miscellaneous.dropscript                = record the sql statements to drop the created tables (during --schemaimport)
help.tooltip.generatePhysicalModel.miscellaneous.idSeqMax                  = set the max value of the technical/internal id generator (the sequence t_ili2db_seq)
help.tooltip.generatePhysicalModel.miscellaneous.idSeqMin                  = set the min value of the technical/internal id generator (the sequence t_ili2db_seq)
help.tooltip.generatePhysicalModel.miscellaneous.ver4-translation          = use ili2db 4.x mapping rules for models with 'TRANSLATION OF'
help.tooltip.generatePhysicalModel.structures.coalesceArray                = enable smart mapping of ARRAY structures
help.tooltip.generatePhysicalModel.structures.coalesceCatalogueRef         = refactors CatalogueObjects_V1. CatalogueReference to a FK
help.tooltip.generatePhysicalModel.structures.coalesceMultiLine            = Structure attributes with 1 as maximum cardinality, MultiLine as base type and without another Line attributes, are mapped directly as MULTICURVE type (or MULTILINESTRING, if --strokeArcs)
help.tooltip.generatePhysicalModel.structures.coalesceMultiPoint           = enable smart mapping of MultiPoint structures
help.tooltip.generatePhysicalModel.structures.coalesceMultisurface         = refactors GeometryCHLV03_V1. MultiSurface to a column with type MULTISURFACE
help.tooltip.generatePhysicalModel.structures.expandMultiLingual           = refactors LocalisationCH_V1. MultilingualText to five columns for de, en, fr, it, rm
help.tooltip.importData.actions.datasetDest                                = destination dataset
help.tooltip.importData.actions.delete                                     = delete records of given dataset (requires --createBasketCol --schemaimport)
help.tooltip.importData.actions.deleteData                                 = insert new records (delete all existing records in affected tables)
help.tooltip.importData.actions.import                                     = insert new records (keep exisiting records)
help.tooltip.importData.actions.replace                                    = insert new records, deleting existing records of given dataset (requires --createBasketCol in schemaimport)
help.tooltip.importData.options.importTid                                  = reads the TID from the transfer file into an additional column T_Ili_Tid (otherwise only classes with a stable OID gets this column)
help.tooltip.importData.validations.configFile                             = file to config validation
help.tooltip.importData.validations.disableAreaValidation                  = disable AREA topology validation
help.tooltip.importData.validations.disableValidation                      = disable any validation
help.tooltip.importData.validations.forceTypeValidation                    = only "multiplicity" can be relaxed in config file
help.tooltip.importData.validations.skipGeometryErrors                     = ignore geometry errors, when importing data (requires --sqlEnableNull in schemaimport)
help.tooltip.importData.validations.skipReferenceErrors                    = ignore reference errors, when importing data
help.tooltip.validateData.extra.plugins                                    = Allows a folder with .jar files that contain additional functions
help.tooltip.validateData.logging.logInXtf                                 = write log messages as Interlis data to the given xtf file
help.tooltip.validateData.validation.configFile                            = Allows a file to configurate validation
help.tooltip.validateData.validation.disableAreaValidation                 = disable AREA topology validation
help.tooltip.validateData.validation.forceTypeValidation                   = only "multiplicity" can be relaxed in config file

importData.action                            = Action
importData.actions                           = Actions
importData.actions.dataset                   = Dataset
importData.actions.delete                    = Delete
importData.actions.deleteData                = Delete data
importData.actions.import                    = Import
importData.actions.replace                   = Replace
importData.actions.update                    = Update
importData.options                           = Options
importData.options.importBid                 = Import BID
importData.options.importTid                 = Import T_ID
importData.validations                       = Validations
importData.validations.disableAreaValidation = Disable area validation
importData.validations.disableValidation     = Disable validation
importData.validations.forceTypeValidation   = Force type validation
importData.validations.skipGeometryErrors    = Skip geometry errors
importData.validations.skipReferenceErrors   = Skip reference errors
importData.validations.validConfig           = Config file

main.content.exportData                   = Export data from a database to a xtf file. Options to define which records shall be exported are available
main.content.generatePhysicalModel        = Create a database schema based on a INTERLIS model. Options to control the O/R mapping exist
main.content.importOrModifyData           = Imports data from a xtf file to an existing database schema. Options to define what happens with existing records are available
main.content.openUmlEditor                = The UML/INTERLIS Editor is a tool for generating INTERLS Datamodels in UML
main.content.validateData                 = Validates data against a given INTERLIS model 
main.content.validateModel                = Help text for INTERLIS model validation options
main.exportData                           = Export data
main.function.exportData.title            = EXPORT DATA
main.function.generatePhysicalModel.title = GENERATE PHYSICAL MODEL
main.function.home.title                  = INTERLIS FUNCTIONS
main.function.importData.title            = IMPORT OR MODIFY DATA
main.function.openUml.title               = OPEN UML/INTERLIS EDITOR
main.function.validateData.title          = VALIDATE DATA
main.generatePhysicalModel                = Generate physical model
main.importOrModifyData                   = Import or modify data
main.openUmlEditor                        = Open UML Editor
main.validateData                         = Validate data
main.validateModel                        = Validate ili model

menu.item.about         = About
menu.item.helpContents  = Help Contents
menu.item.modelDir      = Default model repositories
menu.item.preferences   = Preferences
menu.item.proxySettings = Proxy settings
menu.mainitem.config    = Config
menu.mainitem.help      = Help

openUmlEditor.description = UML/INTERLIS Editor version 3.6.6-20190621\r\nINTERLIS version 2.3\r\nINTERLIS-compiler version 4.7.10-20181203\r\n\r\n\r\n\r\n\r\nAvailable at https://github.com/AgenciaImplementacion/umleditor/releases \r\n\r\n\r\nOfficial version: \rhttp://www.umleditor.org/ 

validateData.extra                            = Extra
validateData.extra.additionalFunctionality    = Additional functionality
validateData.extra.pluginsFolder              = Plugins folder
validateData.logging                          = Logging
validateData.logging.logEnabled               = Log Enabled
validateData.logging.logInXtf                 = Log in xtf
# general.file.extension.log=Log file (*.log)
validateData.logging.traceEnabled             = Trace Enabled
validateData.validation                       = Validation
validateData.validation.configFile            = Config file
validateData.validation.disableAreaValidation = Disable area validation
validateData.validation.forceTypeValidation   = Force type validation
